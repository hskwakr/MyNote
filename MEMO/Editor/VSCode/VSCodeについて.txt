
0:18 2019/12/14
VSCodeで差分を見てタイプミスを探したりしていきます。
https://docs.microsoft.com/ja-jp/dotnet/core/tutorials/creating-app-with-plugin-support

18:17 2019/11/30
VSCodeの設定の中でeditorのところは大雑把に確認した。

Vimの拡張を入れてみようと思う。
https://github.com/VSCodeVim/Vim

2021-01-19 22:55:26
次はこのログを見やすくしたいです。
具体的に言うと、VS Codeの設定を変更するか拡張機能を用意して、シンタックスハイライトを追加したいです。

2021-01-19 23:02:28
Visual Studio CodeでPlane Text(.txt)で自分独自記法のハイライト表示 - 今日も元気にIT屋さん https://prius.hateblo.jp/entry/2016/10/15/121707

この記事でやっていることは僕のやりたいことに近いと思うので、参考にしてみます。

2021-01-19 23:36:57
Syntax Highlight Guide | Visual Studio Code Extension API https://code.visualstudio.com/api/language-extensions/syntax-highlight-guide

VS Codeのシンタックスハイライトの仕組みが説明されてるっぽいです。

Language Grammars — TextMate 1.x Manual https://macromates.com/manual/en/language_grammars

VS CodeはTextMateというものを使って構文からトークンを作ってるらしいです。

2021-01-19 23:41:19
Writing a TextMate Grammar: Some Lessons Learned https://www.apeth.com/nonblog/stories/textmatebundle.html

TextMateの入門としてこれをおすすめされました。

2021-01-20 03:39:05
Your First Extension | Visual Studio Code Extension API https://code.visualstudio.com/api/get-started/your-first-extension

シンタックスハイライト用のプロジェクトはこれで生成できるらしいです。

生成するときにターゲットにしたい言語などを設定するといいらしいのですが、僕がターゲットにするのはtxt拡張子です。

ということはtxt拡張子のファイルをVS Codeはなんの言語として認識しているのかを調べる必要があると思います。

2021-01-20 03:44:59
Language Support in Visual Studio Code https://code.visualstudio.com/docs/languages/overview

plaintextという言語で扱っているようです。

2021-01-20 04:18:23
```
   create textlogsyntax\syntaxes\plaintext.tmLanguage.json
   create textlogsyntax\.vscode\launch.json
   create textlogsyntax\package.json
   create textlogsyntax\README.md
   create textlogsyntax\CHANGELOG.md
   create textlogsyntax\vsc-extension-quickstart.md
   create textlogsyntax\language-configuration.json
   create textlogsyntax\.vscodeignore

Your extension textlogsyntax has been created!

To start editing with Visual Studio Code, use the following commands:

     cd textlogsyntax
     code .

Open vsc-extension-quickstart.md inside the new extension for further instructions
on how to modify, test and publish your extension.

For more information, also visit http://code.visualstudio.com and follow us @code.
```

うまく作ってくれたようです。

2021-01-20 19:57:30
おそらく生成されたtmLanguage.jsonファイルに文法情報を書いていくんだと思います。

ということで書き方を勉強します。

Language Grammars — TextMate 1.x Manual https://macromates.com/manual/en/language_grammars

正規表現をテストできるサイト

Rubular: a Ruby regular expression editor https://rubular.com/

2021-01-20 22:15:00
oniguruma/RE.ja at master · kkos/oniguruma · GitHub https://github.com/kkos/oniguruma/blob/master/doc/RE.ja

文法判別に使える正規表現プログラムの情報

2021-01-20 23:12:02
引用ブロックを判別する方法がよくわかってません。

Jsonスキーマ見た感じだと、keywordsのpatternsの中に書いていいっぽいです。

2021-01-20 23:23:55
日付と時間のタイムスタンプとurlと引用文のためのシンタックスを作ることができました。

今はこの拡張機能のプロジェクトファイルからテストを実行しないと適用されないので、
いつでも適用できるように設定したいです。

2021-01-20 23:30:07
```
## Install your extension

* To start using your extension with Visual Studio Code copy it into the `<user home>/.vscode/extensions` folder and restart Code.
* To share your extension with the world, read on https://code.visualstudio.com/docs about publishing an extension.
```

C:\Users\hskwakr\.vscode
のentensionsフォルダーに入れるといいらしいです。

2021-01-21 00:10:18
```
"patterns": [
{
   "name": "string",
   "match": "\\b([0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2})\\b"
},
{
   "name": "keyword",
   "match": "\\b(https?\\:\/\/[\\w!?\/\\+\\-_~=;\\.,\\*&@#\\$%\\(\\)'\\[\\]]+)\\b"
},
{
   "name": "comment.block",
   "begin": "^```$",
   "end": "^```$"
}]
```

