2021-03-28 02:49:45
A tour of Goの続きからやります。

2021-03-28 03:24:43
スライスを削ったり拡張しても元々入っていた値は消えたりしてないようです。

スライスはある配列がもとになっているのである配列の方に値が残っていたらスライスを拡張したときに見えるようになるみたいです。

```
func tour20() {
	s := []int{2, 3, 5, 7, 11, 13}
	fmt.Println(s)

	// Slice the slice to give it zero length
	s = s[:0]
	fmt.Println(s) // []

	// Extend its length
	s = s[:4]
	fmt.Println(s) // 2, 3, 5, 7

	// Drop its first two values
	s = s[2:]
	fmt.Println(s) // 5, 7
}
```

2021-03-28 03:27:37
ある配列: [1, 3, 5]
の長さを増やしたらどうなるんでしょうか
試してみます

```
panic: runtime error: slice bounds out of range [:5] with capacity 3
```

エラーが起きました。

2021-03-28 03:47:53
```
	// Drop its first two values
	s = s[2:]
	printSlice(s)
	// len=2 cap=4 [5, 7]
```

s[2:]をするとcapacityが変わるみたいです

2021-03-28 04:23:07
複数の値をappendで追加したときに
capacityがひとつ多くなってました
何故かはわかりません。
```
	// The slice grows as needed
	s = append(s, 1)
	printSlice(s)
	// len=2 cap=2 [0, 1]

	// We can add more than one element at a time
	s = append(s, 2, 3, 4)
	printSlice(s)
	// len=5 cap=6 [0, 1, 2, 3, 4]
```
